package com.demo.common;


import org.beetl.core.GroupTemplate;
import org.beetl.ext.jfinal.BeetlRenderFactory;

import com.demo.asset.officesupply.OfficeSupply;
import com.demo.asset.officesupply.OfficeSupplyApply;
import com.demo.asset.officesupply.OfficeSupplyController;
import com.demo.asset.officesupply.OfficeSupplyOut;
import com.demo.asset.supplier.Supplier;
import com.demo.asset.supplier.SupplierController;
import com.demo.index.IndexController;
import com.demo.login.LoginController;
import com.jfinal.config.Constants;
import com.jfinal.config.Handlers;
import com.jfinal.config.Interceptors;
import com.jfinal.config.JFinalConfig;
import com.jfinal.config.Plugins;
import com.jfinal.config.Routes;
import com.jfinal.core.JFinal;
import com.jfinal.ext.interceptor.SessionInViewInterceptor;
import com.jfinal.plugin.activerecord.ActiveRecordPlugin;
import com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect;
import com.jfinal.plugin.activerecord.dialect.MysqlDialect;
import com.jfinal.plugin.c3p0.C3p0Plugin;

/**
 * API引导式配置
 */
public class DemoConfig extends JFinalConfig {
	
	/**
	 * 配置常量
	 */
	public void configConstant(Constants me) {
		// 加载少量必要配置，随后可用getProperty(...)获取值
		loadPropertyFile("a_little_config.txt");
		
		//加入render
		me.setMainRenderFactory(new BeetlRenderFactory());
		
		GroupTemplate gt = BeetlRenderFactory.groupTemplate;
		//根据gt可以添加扩展函数，格式化函数，共享变量等，
		
		/*
		gt.registerTag("trimTag", TrimTag.class);	
		
		  public class TrimTag extends Tag{
			    public String getOutput(){
			        return "";
			    }   
			    @Override
			    public  boolean requriedInput(){
                 return false;}}
       */
    }

	

	
	/**
	 * 配置路由
	 */
	public void configRoute(Routes me) {
		me.add("/", CommonController.class);
		me.add("/asset/supplier", SupplierController.class, "/asset_management/supplier");
		me.add("/asset/officeSupply", OfficeSupplyController.class, "/asset_management/office_supply");
		me.add("/index", IndexController.class);
		me.add("/login", LoginController.class, "/index");
	}
	
	/**
	 * 配置插件
	 */
	public void configPlugin(Plugins me) {

		
		// 配置C3p0数据库连接池插件
		C3p0Plugin c3p0Plugin = new C3p0Plugin(getProperty("jdbcUrl"), getProperty("user"), getProperty("password"),getProperty("driverClass"));
		me.add(c3p0Plugin);
		
		//me.add(new EhCachePlugin());

		// 配置ActiveRecord插件
		ActiveRecordPlugin arp = new ActiveRecordPlugin(c3p0Plugin);
		//arp.setDialect(new H2Dialect());
		arp.setDialect( new MysqlDialect() );
		//arp.setCache(new EhCache());

		me.add(arp);
		arp.addMapping("supplier_table", "ID", Supplier.class);
		arp.addMapping("office_supply_table", "ID", OfficeSupply.class);
		arp.addMapping("office_supply_out_table", "ID", OfficeSupplyOut.class);
		arp.addMapping("office_supply_apply_table", "ID", OfficeSupplyApply.class);
	}
	
	/**
	 * 配置全局拦截器
	 */
	public void configInterceptor(Interceptors me) {
		//支持在jfinal中用sesion
		me.add(new SessionInViewInterceptor());
	}
	
	/**
	 * 配置处理器
	 */
	public void configHandler(Handlers me) {
		
	}
	
	/**
	 * 建议使用 JFinal 手册推荐的方式启动项目
	 * 运行此 main 方法可以启动项目，此main方法可以放置在任意的Class类定义中，不一定要放于此
	 */
	public static void main(String[] args) throws Exception{

		JFinal.start("WebRoot", 8081, "/", 5);
	}
	
	
}

class H2Dialect extends AnsiSqlDialect{
	
}
